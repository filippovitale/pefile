package pefile

import pefile.codec._
import scodec.bits._
import scodec.{Codec, SizeBound}
import scodec.codecs._
import scodec.codecs.literals._

object Main extends App {

  val notMsdosHeader = hex"0000 0000 0000 0000 0000 0000 0000 0000"

  val msdosHeaderSample = hex"""
      4d5a 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 4000 0000
    """

  val tinypeC45056Sample = hex"""
      4d5a 9000 0300 0000 0400 0000 ffff 0000
      b800 0000 0000 0000 4000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 d000 0000
      0e1f ba0e 00b4 09cd 21b8 014c cd21 5468
      6973 2070 726f 6772 616d 2063 616e 6e6f
      7420 6265 2072 756e 2069 6e20 444f 5320
      6d6f 6465 2e0d 0d0a 2400 0000 0000 0000
      d422 7945 9043 1716 9043 1716 9043 1716
      534c 4a16 9343 1716 9043 1616 db43 1716
      b785 6a16 8043 1716 b785 7916 8943 1716
      b785 7a16 d843 1716 b785 6f16 9143 1716
      5269 6368 9043 1716 0000 0000 0000 0000
      5045 0000 4c01 0300 2ebd 4545 0000 0000
      0000 0000 e000 0301 0b01 0800 0070 0000
      0040 0000 0000 0000 2512 0000 0010 0000
      0080 0000 0000 4000 0010 0000 0010 0000
      0400 0000 0000 0000 0400 0000 0000 0000
      00c0 0000 0010 0000 0000 0000 0300 0000
      0000 1000 0010 0000 0000 1000 0010 0000
      0000 0000 1000 0000 0000 0000 0000 0000
      f494 0000 2800 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 0092 0000 4000 0000
      0000 0000 0000 0000 0080 0000 f000 0000
      0000 0000 0000 0000 0000 0000 0000 0000
      0000 0000 0000 0000 2e74 6578 7400 0000
    """

  val msdosHeader = Codec.decode[MSDosHeader](msdosHeaderSample.bits).require.value
  println(BitVector.fromShort(msdosHeader.ihl))
  val tinypeC45056 = Codec.decode[MSDosHeader](tinypeC45056Sample.bits).require.value
  println(BitVector.fromShort(tinypeC45056.ihl))
}
